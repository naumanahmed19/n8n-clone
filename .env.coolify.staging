# Coolify Staging Environment Configuration
# This file contains staging environment variables for Coolify deployment
# Copy values to Coolify environment variables section

# =============================================================================
# REQUIRED SECRETS (Generate in Coolify Secrets Management)
# =============================================================================

# Database Authentication
POSTGRES_PASSWORD=__COOLIFY_SECRET_POSTGRES_PASSWORD_STAGING__
POSTGRES_DB=n8n_clone_staging
POSTGRES_USER=postgres

# Application Security
JWT_SECRET=__COOLIFY_SECRET_JWT_SECRET_STAGING__
SESSION_SECRET=__COOLIFY_SECRET_SESSION_SECRET_STAGING__
ENCRYPTION_KEY=__COOLIFY_SECRET_ENCRYPTION_KEY_STAGING__

# =============================================================================
# REQUIRED CONFIGURATION (Set in Coolify Environment Variables)
# =============================================================================

# Domain Configuration
FRONTEND_DOMAIN=staging.yourdomain.com
BACKEND_DOMAIN=api-staging.yourdomain.com
CORS_ORIGIN=https://staging.yourdomain.com
VITE_API_URL=https://api-staging.yourdomain.com
WEBHOOK_URL=https://staging.yourdomain.com

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=staging
LOG_LEVEL=debug

# Server Ports
PORT=4000
FRONTEND_PORT=3000

# Database Connection (Auto-generated)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# Redis Connection (Auto-generated)
REDIS_URL=redis://redis:6379/1

# =============================================================================
# SECURITY CONFIGURATION (Relaxed for Staging)
# =============================================================================

# Authentication
JWT_EXPIRES_IN=24h
BCRYPT_ROUNDS=10

# Session Configuration
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTP_ONLY=true
SESSION_COOKIE_SAME_SITE=lax
SESSION_MAX_AGE=86400000

# CORS Configuration (More permissive for testing)
CORS_CREDENTIALS=true
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With,X-Test-Header

# =============================================================================
# PERFORMANCE CONFIGURATION (Reduced for Staging)
# =============================================================================

# Database Pool
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE=10000
DB_POOL_ACQUIRE=30000

# Redis Configuration
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000
REDIS_CONNECT_TIMEOUT=5000

# =============================================================================
# MONITORING AND LOGGING (Enhanced for Testing)
# =============================================================================

# Logging
LOG_FORMAT=pretty
LOG_TIMESTAMP=true
LOG_COLORIZE=true

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_TIMEOUT=5000

# Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# Debug Features
DEBUG_ENABLED=true
DEBUG_SQL=true
DEBUG_REDIS=true

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================

# Webhook Security
WEBHOOK_SIGNING_SECRET=__COOLIFY_SECRET_WEBHOOK_SIGNING_SECRET_STAGING__
WEBHOOK_TIMEOUT=30000
WEBHOOK_MAX_RETRIES=3

# =============================================================================
# RATE LIMITING (Relaxed for Testing)
# =============================================================================

# API Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=200

# Form Rate Limiting
FORM_FETCH_WINDOW_MS=60000
FORM_FETCH_MAX_REQUESTS=50
FORM_SUBMIT_WINDOW_MS=300000
FORM_SUBMIT_MAX_REQUESTS=10

# Authentication Rate Limiting
AUTH_WINDOW_MS=300000
AUTH_MAX_REQUESTS=10

# =============================================================================
# FILE STORAGE
# =============================================================================

# Upload Configuration
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain
UPLOAD_DIR=/app/uploads
TEMP_DIR=/app/temp

# =============================================================================
# NGINX CONFIGURATION (Frontend)
# =============================================================================

NGINX_HOST=${FRONTEND_DOMAIN}
NGINX_CLIENT_MAX_BODY_SIZE=10m
NGINX_PROXY_TIMEOUT=60s
NGINX_GZIP_ENABLED=true

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test Database
TEST_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}_test

# Test Features
ENABLE_TEST_ROUTES=true
ENABLE_MOCK_SERVICES=true
SKIP_AUTH_FOR_TESTS=false

# =============================================================================
# COOLIFY SPECIFIC CONFIGURATION
# =============================================================================

# Coolify Labels
COOLIFY_PROJECT_NAME=n8n-clone-staging
COOLIFY_ENVIRONMENT=staging
COOLIFY_AUTO_DEPLOY=true
COOLIFY_BUILD_PACK=docker-compose

# Health Check Endpoints
COOLIFY_HEALTH_CHECK_FRONTEND=/health
COOLIFY_HEALTH_CHECK_BACKEND=/health

# SSL Configuration
COOLIFY_SSL_ENABLED=true
COOLIFY_SSL_REDIRECT=true
COOLIFY_SSL_HSTS=false

# Backup Configuration (Reduced frequency)
COOLIFY_BACKUP_ENABLED=true
COOLIFY_BACKUP_SCHEDULE=0 4 * * 0
COOLIFY_BACKUP_RETENTION=3