# Image Preview Node - Architecture Diagram

```
┌─────────────────────────────────────────────────────────────────────────────┐
│                         IMAGE PREVIEW NODE SYSTEM                            │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ BACKEND (Node Definition)                                                    │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│  backend/src/nodes/ImagePreview/ImagePreview.node.ts                        │
│  ┌───────────────────────────────────────────────────────────────────────┐  │
│  │ export const ImagePreviewNode: NodeDefinition = {                     │  │
│  │   type: "image-preview",                                              │  │
│  │   properties: [                                                       │  │
│  │     { name: "imageUrl", type: "string" },          ← Input Field     │  │
│  │     { name: "imagePreview", type: "custom",        ← Custom Component│  │
│  │       component: "ImagePreview",                                      │  │
│  │       componentProps: { urlField: "imageUrl" }                        │  │
│  │     }                                                                  │  │
│  │   ],                                                                  │  │
│  │   execute: async function(inputData) {            ← Execution Logic  │  │
│  │     // Fetch image metadata                                           │  │
│  │     // Return { imageUrl, metadata, ... }                            │  │
│  │   }                                                                   │  │
│  │ }                                                                     │  │
│  └───────────────────────────────────────────────────────────────────────┘  │
│                                    ↓                                          │
│                           [Auto-Discovery System]                             │
│                                    ↓                                          │
│                        [NodeService Registration]                             │
│                                    ↓                                          │
│                          [Database Storage]                                   │
└───────────────────────────────────┬───────────────────────────────────────────┘
                                    │
                                    │ API
                                    ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│ FRONTEND (3 Display Contexts)                                                │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ 1️⃣ CONFIG DIALOG - Live Preview                                        │ │
│  ├────────────────────────────────────────────────────────────────────────┤ │
│  │ frontend/src/components/ui/form-generator/custom-fields/               │ │
│  │ ImagePreview.tsx                                                       │ │
│  │ ┌──────────────────────────────────────────────────────────────────┐  │ │
│  │ │ export function ImagePreview({ field, allValues }) {             │  │ │
│  │ │   const url = allValues[field.componentProps.urlField]           │  │ │
│  │ │                                                                   │  │ │
│  │ │   return (                                                        │  │ │
│  │ │     <div>                                                         │  │ │
│  │ │       {!url && <EmptyState />}             ← No URL              │  │ │
│  │ │       {loading && <LoadingSpinner />}      ← Loading             │  │ │
│  │ │       {error && <ErrorMessage />}          ← Error               │  │ │
│  │ │       {url && <img src={url} />}           ← Preview             │  │ │
│  │ │       <ImageDimensions />                  ← Metadata            │  │ │
│  │ │     </div>                                                        │  │ │
│  │ │   )                                                               │  │ │
│  │ │ }                                                                 │  │ │
│  │ └──────────────────────────────────────────────────────────────────┘  │ │
│  │                                                                        │ │
│  │ Registered in: CustomComponentRegistry.tsx                            │ │
│  │ Used by: ConfigTab.tsx → FormGenerator → PropertyField               │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ 2️⃣ WORKFLOW CANVAS - Image as Node Icon                                │ │
│  ├────────────────────────────────────────────────────────────────────────┤ │
│  │ frontend/src/components/workflow/components/NodeContent.tsx           │ │
│  │ ┌──────────────────────────────────────────────────────────────────┐  │ │
│  │ │ export function NodeContent({ imageUrl, icon, ... }) {           │  │ │
│  │ │   const hasImage = imageUrl && !imageError                       │  │ │
│  │ │                                                                   │  │ │
│  │ │   return hasImage ? (                                            │  │ │
│  │ │     <img src={imageUrl}                    ← Image Icon          │  │ │
│  │ │          className="w-8 h-8 object-cover"                        │  │ │
│  │ │          onLoad={...}                                            │  │ │
│  │ │          onError={setImageError} />                              │  │ │
│  │ │   ) : (                                                          │  │ │
│  │ │     <div>{icon}</div>                      ← Default Icon        │  │ │
│  │ │   )                                                              │  │ │
│  │ │ }                                                                 │  │ │
│  │ └──────────────────────────────────────────────────────────────────┘  │ │
│  │                                                                        │ │
│  │ Called by: CustomNode.tsx                                             │ │
│  │ Props from: node.parameters.imageUrl                                  │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ 3️⃣ OUTPUT COLUMN - Rich Image Display                                  │ │
│  ├────────────────────────────────────────────────────────────────────────┤ │
│  │ frontend/src/components/workflow/node-config/OutputColumn.tsx         │ │
│  │ ┌──────────────────────────────────────────────────────────────────┐  │ │
│  │ │ function ImagePreviewOutput({ data }) {                          │  │ │
│  │ │   return (                                                        │  │ │
│  │ │     <div>                                                         │  │ │
│  │ │       <img src={data.imageUrl}             ← Large Preview       │  │ │
│  │ │            className="max-h-96" />                               │  │ │
│  │ │       <ImageMetadata>                      ← Type, Size, etc     │  │ │
│  │ │         {data.metadata.contentType}                              │  │ │
│  │ │         {data.metadata.sizeFormatted}                            │  │ │
│  │ │       </ImageMetadata>                                           │  │ │
│  │ │       <details>                            ← Collapsible JSON    │  │ │
│  │ │         <pre>{JSON.stringify(data)}</pre>                        │  │ │
│  │ │       </details>                                                 │  │ │
│  │ │     </div>                                                        │  │ │
│  │ │   )                                                               │  │ │
│  │ │ }                                                                 │  │ │
│  │ └──────────────────────────────────────────────────────────────────┘  │ │
│  │                                                                        │ │
│  │ Conditional rendering in OutputColumn based on: displayData.imageUrl │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ DATA FLOW                                                                     │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│  User Types URL in Config Dialog                                             │
│         ↓                                                                     │
│  [1] ImagePreview Component Detects Change                                   │
│         ↓                                                                     │
│  [2] Loads Image via Browser Image API                                       │
│         ↓                                                                     │
│  [3] Shows Preview + Dimensions                                              │
│         ↓                                                                     │
│  [4] User Saves Config                                                       │
│         ↓                                                                     │
│  [5] CustomNode Receives imageUrl Parameter                                  │
│         ↓                                                                     │
│  [6] NodeContent Renders Image as Icon                                       │
│         ↓                                                                     │
│  [7] User Executes Workflow                                                  │
│         ↓                                                                     │
│  [8] Backend Fetches Image Metadata                                          │
│         ↓                                                                     │
│  [9] Returns { imageUrl, metadata, altText, ... }                            │
│         ↓                                                                     │
│  [10] OutputColumn Detects imageUrl in Data                                  │
│         ↓                                                                     │
│  [11] Renders ImagePreviewOutput Component                                   │
│         ↓                                                                     │
│  [12] Shows Large Preview + Metadata                                         │
│                                                                               │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ KEY CONCEPTS                                                                  │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│  🔑 Custom Component System                                                  │
│     - Backend defines: type: "custom", component: "ImagePreview"            │
│     - Frontend registers: componentRegistry.ImagePreview = Component        │
│     - FormGenerator looks up and renders the component                      │
│                                                                               │
│  🔑 Multi-Context Rendering                                                  │
│     - Same data (imageUrl) rendered differently in 3 contexts               │
│     - Config: Interactive preview with controls                             │
│     - Canvas: Compact icon representation                                   │
│     - Output: Full-featured display with metadata                           │
│                                                                               │
│  🔑 Reactive Updates                                                         │
│     - useEffect watches allValues changes                                   │
│     - Image loads automatically on URL change                               │
│     - Node icon updates when parameters change                              │
│                                                                               │
│  🔑 Error Handling                                                           │
│     - URL validation (format, protocol)                                     │
│     - Image loading errors (404, invalid type)                              │
│     - Graceful fallbacks (default icon, error messages)                     │
│                                                                               │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ FILE RELATIONSHIPS                                                            │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│  Backend Node Definition                                                     │
│  └─→ Auto-Discovery System                                                   │
│      └─→ NodeService Registration                                            │
│          └─→ Database Storage                                                │
│              └─→ API Endpoint                                                │
│                  └─→ Frontend NodeStore                                      │
│                                                                               │
│  Custom Component Registration                                               │
│  ImagePreview.tsx                                                            │
│  └─→ CustomComponentRegistry.tsx                                             │
│      └─→ FormGenerator.tsx (via getCustomComponent)                          │
│          └─→ ConfigTab.tsx                                                   │
│              └─→ NodeConfigDialog.tsx                                        │
│                                                                               │
│  Node Icon Rendering                                                         │
│  parameters.imageUrl                                                         │
│  └─→ CustomNode.tsx (passes to NodeContent)                                  │
│      └─→ NodeContent.tsx (renders as icon)                                   │
│          └─→ WorkflowCanvas                                                  │
│                                                                               │
│  Output Display                                                              │
│  execution result                                                            │
│  └─→ OutputColumn.tsx (checks for imageUrl)                                  │
│      └─→ ImagePreviewOutput (renders preview)                                │
│          └─→ NodeConfigDialog                                                │
│                                                                               │
└─────────────────────────────────────────────────────────────────────────────┘
```
